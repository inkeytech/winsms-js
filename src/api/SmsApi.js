/**
 * WinSMS
 * WinSMS RESTful API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@winsms.co.za
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DeleteScheduledResponse', 'model/ErrorDetails', 'model/IncomingMessageResponse', 'model/MessageStatusResponse', 'model/NewMessageDetails', 'model/NewMessageResponse', 'model/OptoutMessageResponse', 'model/ScheduledMessageResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DeleteScheduledResponse'), require('../model/ErrorDetails'), require('../model/IncomingMessageResponse'), require('../model/MessageStatusResponse'), require('../model/NewMessageDetails'), require('../model/NewMessageResponse'), require('../model/OptoutMessageResponse'), require('../model/ScheduledMessageResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.Winsms) {
      root.Winsms = {};
    }
    root.Winsms.SmsApi = factory(root.Winsms.ApiClient, root.Winsms.DeleteScheduledResponse, root.Winsms.ErrorDetails, root.Winsms.IncomingMessageResponse, root.Winsms.MessageStatusResponse, root.Winsms.NewMessageDetails, root.Winsms.NewMessageResponse, root.Winsms.OptoutMessageResponse, root.Winsms.ScheduledMessageResponse);
  }
}(this, function(ApiClient, DeleteScheduledResponse, ErrorDetails, IncomingMessageResponse, MessageStatusResponse, NewMessageDetails, NewMessageResponse, OptoutMessageResponse, ScheduledMessageResponse) {
  'use strict';

  /**
   * Sms service.
   * @module api/SmsApi
   * @version 1.0.0
   */

  /**
   * Constructs a new SmsApi. 
   * @alias module:api/SmsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the deleteScheduledMessages operation.
     * @callback module:api/SmsApi~deleteScheduledMessagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeleteScheduledResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete scheduled SMS messages and refund credits
     * Delete a list of previously scheduled SMS messages that have not yet been sent.  Credits originally deducted for each SMS message will be refunded to your account upon successful deletion. 
     * @param {Array.<module:model/Number>} messageDeleteRequest An array of WinSMS API Ids received after submitting scheduled messages to the ***_/sms/outgoing/send*** endpoint.&lt;br&gt; A maximum of 1000 API Ids can be supplied in a single request. 
     * @param {module:api/SmsApi~deleteScheduledMessagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeleteScheduledResponse}
     */
    this.deleteScheduledMessages = function(messageDeleteRequest, callback) {
      var postBody = messageDeleteRequest;

      // verify the required parameter 'messageDeleteRequest' is set
      if (messageDeleteRequest === undefined || messageDeleteRequest === null) {
        throw new Error("Missing the required parameter 'messageDeleteRequest' when calling deleteScheduledMessages");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DeleteScheduledResponse;

      return this.apiClient.callApi(
        '/sms/scheduled/delete', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getIncomingMessages operation.
     * @callback module:api/SmsApi~getIncomingMessagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/IncomingMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of incoming SMS messages
     * Get a list of all incoming SMS messages received by the account.  Only the first 100 incoming messages will be returned if no ***offset*** and ***limit*** parameters are specified. 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.offset ***Optional*** - The number of items to skip before starting to return results. Default 0. Minimum 0.  (default to 0)
     * @param {Number} opts.limit ***Optional*** - The number of items to return. Default 100. Minimum 1. Maximum 1000.  (default to 100)
     * @param {module:api/SmsApi~getIncomingMessagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/IncomingMessageResponse}
     */
    this.getIncomingMessages = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = IncomingMessageResponse;

      return this.apiClient.callApi(
        '/sms/incoming', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOptoutMessages operation.
     * @callback module:api/SmsApi~getOptoutMessagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OptoutMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of incoming opt-out SMS messages
     * Get a list of all opt-out SMS messages received by the account, as well as all manually added opt-out numbers.&lt;br&gt;
     * @param {module:api/SmsApi~getOptoutMessagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OptoutMessageResponse}
     */
    this.getOptoutMessages = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = OptoutMessageResponse;

      return this.apiClient.callApi(
        '/sms/incoming/optout', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getScheduledMessages operation.
     * @callback module:api/SmsApi~getScheduledMessagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScheduledMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of scheduled SMS messages
     * Get a list of all scheduled SMS messages that have not yet been sent.  Only the first 100 scheduled messages will be returned if no ***offset*** and ***limit*** parameters are specified. 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.offset ***Optional*** - The number of items to skip before starting to return results. Default 0. Minimum 0.  (default to 0)
     * @param {Number} opts.limit ***Optional*** - The number of items to return. Default 100. Minimum 1. Maximum 1000.  (default to 100)
     * @param {module:api/SmsApi~getScheduledMessagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScheduledMessageResponse}
     */
    this.getScheduledMessages = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ScheduledMessageResponse;

      return this.apiClient.callApi(
        '/sms/scheduled', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the smsSend operation.
     * @callback module:api/SmsApi~smsSendCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NewMessageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send SMS messages
     * Submit 1 or more SMS messages to be sent by WinSMS. Maximum 1000 recipients per request.  The SMS message text can be a maximum of 918 characters long. If you are submitting a message longer than 160 characters, you should change the value of ***maxSegments***. 
     * @param {module:model/NewMessageDetails} newMessageDetails The message, recipients and delivery options of an SMS message to be sent. 
     * @param {module:api/SmsApi~smsSendCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NewMessageResponse}
     */
    this.smsSend = function(newMessageDetails, callback) {
      var postBody = newMessageDetails;

      // verify the required parameter 'newMessageDetails' is set
      if (newMessageDetails === undefined || newMessageDetails === null) {
        throw new Error("Missing the required parameter 'newMessageDetails' when calling smsSend");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = NewMessageResponse;

      return this.apiClient.callApi(
        '/sms/outgoing/send', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the smsStatus operation.
     * @callback module:api/SmsApi~smsStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessageStatusResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get SMS delivery statuses
     * Get a list of previously submitted SMS message delivery statuses.  Post an array of API Message Ids received from the ***_/sms/outgoing/send*** endpoint. 
     * @param {Array.<module:model/Number>} messageStatusRequest An array of WinSMS API Ids received after submitting messages to the ***_/sms/outgoing/send*** endpoint.  A maximum of 1000 API Ids can be supplied in a single request. 
     * @param {module:api/SmsApi~smsStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessageStatusResponse}
     */
    this.smsStatus = function(messageStatusRequest, callback) {
      var postBody = messageStatusRequest;

      // verify the required parameter 'messageStatusRequest' is set
      if (messageStatusRequest === undefined || messageStatusRequest === null) {
        throw new Error("Missing the required parameter 'messageStatusRequest' when calling smsStatus");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['APIKeyHeader'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = MessageStatusResponse;

      return this.apiClient.callApi(
        '/sms/outgoing/status', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
